<<<<<<< HEAD
ED_path<-paste0(ED_Dir_path,ED_dir[1])
ED<-read.csv(ED_path,file = new_path00)
ED<-read.csv(ED_path)
ED
nrow(ED)
ncol(ED)
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
ED[i,j]<-ifelse(is.na(ED[i,j]),0,)
}
}
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
ED[i,j]<-ifelse(is.na(ED[i,j]),0,break)
}
}
ED
ED[i,j]
i
j
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
# ED[i,j]<-ifelse(is.na(ED[i,j]),0,break)
if(is.na(ED[i,j])){
assign(ED[i,j],0)
}
}
}
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
# ED[i,j]<-ifelse(is.na(ED[i,j]),0,break)
if(is.na(ED[i,j])){
# assign(ED[i,j],0)
replace(ED[i,j],0)
}
}
}
as.data.frame(ED,is.na=0)
grep(ED)<-0
grep(ED,0)
ED
grep(is.na(ED),0)
ED
is.na(ED)
grepl(is.na(ED),0)
gsub(is.na(ED),0)
grep(is.na(ED))
gsub(is.na(ED),x=0)
gsub(is.na(ED),0,ED)
ED
txt <- c("arm","foot","lefroo", "bafoobar")
if(length(i <- grep("foo", txt)))
cat("'foo' appears at least once in\n\t", txt, "\n")
ED[1,]
grep("foo"
)
txt <- c("arm","foot","lefroo", "bafoobar")
grep("foo", txt)
length(i <- grep("foo", txt))
grep("[a-z]", letters)
cat("'foo' appears at least once in\n", txt, "\n")
ED[1,i<-grep(is.na(ED[1,]),ED[1,])}
if(ED[1,i<-grep(is.na(ED[1,]),ED[1,])})
ED[1,]
if(ED[1,i<-grep(is.na(ED[1,]),ED[1,]))])
ED[1,]
ED
if(ED[7,i<-grep(is.na(ED[7,]),ED[7,]))])
if(ED[7,i<-grep(is.na(ED[7,]),ED[7,])])
ED[1,]
txt <- c("arm","foot","lefroo", "bafoobar")
if(length(i <- grep("foo", txt)))
cat("'foo' appears at least once in\n\t", txt, "\n")
i # 2 and 4
txt[i]
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
# ED[i,j]<-ifelse(is.na(ED[i,j]),0,break)
if(is.na(ED[i,j])){
# assign(ED[i,j],0)
# replace(ED[i,j],0)
0->ED[i,j]
}
}
}
ED[i,j]
ED
ED[,9]
ED[5,9]
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
# ED[i,j]<-ifelse(is.na(ED[i,j]),0,break)
if(is.na(ED[i,j])|is.null(ED[i,j])){
# assign(ED[i,j],0)
# replace(ED[i,j],0)
0->ED[i,j]
}
}
}
ED
View(TW.1101)
TW.1101[5,7]
TW.1101[5,8]
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
# ED[i,j]<-ifelse(is.na(ED[i,j]),0,break)
if(is.na(ED[i,j])|is.null(ED[i,j])|ED[i,j]==""){
# assign(ED[i,j],0)
# replace(ED[i,j],0)
0->ED[i,j]
}
}
}
ED
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
# ED[i,j]<-ifelse(is.na(ED[i,j]),0,break)
if(is.na(ED[i,j])|is.null(ED[i,j])|ED[i,j]==""||ED[i,j]=="<NA>"){
# assign(ED[i,j],0)
# replace(ED[i,j],0)
0->ED[i,j]
}
}
}
ED
TW.1101[5,9]
is.na(TW.1101[5,9])
nrow(ED)
ncol(ED)
warnings()
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
# ED[i,j]<-ifelse(is.na(ED[i,j]),0,break)
if(is.na(ED[i,j])|is.null(ED[i,j])|ED[i,j]==""||ED[i,j]=="<NA>"){
# assign(ED[i,j],0)
# replace(ED[i,j],0)
"0"->ED[i,j]
}
}
}
ED
ED[5,9]
Upath<-paste0("F:/")
ED_Dir_path<-paste0(Upath,"EXdata/Ex_dividend/getStockNumED/")
ED_dir<-dir(ED_Dir_path)
ED_path<-paste0(ED_Dir_path,ED_dir[1])
ED<-read.csv(ED_path,stringsAsFactors = FALSE)
for (i in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
# ED[i,j]<-ifelse(is.na(ED[i,j]),0,break)
if(is.na(ED[i,j])|is.null(ED[i,j])|ED[i,j]==""||ED[i,j]=="<NA>"){
# assign(ED[i,j],0)
# replace(ED[i,j],0)
"0"->ED[i,j]
}
}
}
ED
#'Restore_Ex_dividend
#'
#'還原除權息 2005-2016
#'資料 data tw50 共50隻
#'
#'繼承:TWSEEx_dividend2
#'
#'繼承:readTWSEEx_dividend
#'
#'前身:JAVA_getTwseData3
#disk location
Upath<-paste0("F:/")
#file location
BD_dir_path<-paste0(Upath,"data/new/tw50/")
BD_dir<-dir(BD_dir_path,"csv$")
for (i in 1:length(BD_dir)) {
#read file############################################################################################BD
getStockNumBD_path<-paste0(BD_dir_path,BD_dir[i])###############################################choice read file
getStockNumBD<-read.csv(getStockNumBD_path,fileEncoding="UTF-8",stringsAsFactors = FALSE)#<-UTF-8
colnames(getStockNumBD)
getStockNumBD<-filter(getStockNumBD,getStockNumBD$Year>=2005)
getStockNumBD<-mutate(getStockNumBD,"Date"=as.Date(paste(getStockNumBD$Year,getStockNumBD$Month,getStockNumBD$Day,sep="-")))
getStockNumBD2<-select(getStockNumBD,c(ncol(getStockNumBD),6:(ncol(getStockNumBD)-1)))
# colnames(getStockNumBD2)
# [1] "Date"   "vol_S"  "vol_P"  "P_S"    "P_H"    "P_L"    "P_E"    "P_D2"   "exc"    "NP_D2D"
assign(paste("ReED_BD",substr(BD_dir[i],1,4),sep="."),getStockNumBD2)
# #file location############################################################################################ED
ED_path<-paste0(Upath,"EXdata/Ex_dividend/getStockNumED/TW.",substr(BD_dir[i],1,4),".csv")
# assign(paste("ReED_ED",substr(BD_dir[i],1,4),sep="."),read.csv(ED_path,stringsAsFactors = FALSE))
#
# ED<-get(paste("ReED_ED",substr(BD_dir[i],1,4),sep="."))
ED<-read.csv(ED_path,stringsAsFactors = FALSE)
for (k in 1:nrow(ED)) {
for (j in 1:ncol(ED)) {
if(is.na(ED[k,j])|is.null(ED[k,j])|ED[k,j]==""||ED[k,j]=="<NA>"){
0->ED[k,j]
}
}
}
getData<-NULL
for (k in 1:nrow(ED)) {
if ((ED$dividend_C_Earnings+ED$dividend_C_Law)[k]>0) {
getData<-rbind(getData,cbind(
as.character(as.Date(
paste(
as.numeric(strsplit(ED$dividend_C_Date[k],"/")[[1]][1])+1911,
as.numeric(strsplit(ED$dividend_C_Date[k],"/")[[1]][2]),
as.numeric(strsplit(ED$dividend_C_Date[k],"/")[[1]][3])
,sep="-")
))
,
"C",
(ED$dividend_C_Earnings+ED$dividend_C_Law)[k]))
}
if (((ED$dividend_S_Earnings+ED$dividend_S_Law)[k]/10>0)) {
getData<-rbind(getData,cbind(
as.character(as.Date(
paste(
as.numeric(strsplit(ED$dividend_S_Date[k],"/")[[1]][1])+1911,
as.numeric(strsplit(ED$dividend_S_Date[k],"/")[[1]][2]),
as.numeric(strsplit(ED$dividend_S_Date[k],"/")[[1]][3])
,sep="-")
))
,
"S",
(ED$dividend_S_Earnings+ED$dividend_S_Law)[k]))
}
}
assign(paste("ReED_ED",substr(BD_dir[i],1,4),sep="."),getData)
getDataC<-NULL
getDataS<-NULL
for (k in 1:nrow(ED)) {
if ((ED$dividend_C_Earnings+ED$dividend_C_Law)[k]>0) {
getDataC<-rbind(getDataC,cbind(
as.character(as.Date(
paste(
as.numeric(strsplit(ED$dividend_C_Date[k],"/")[[1]][1])+1911,
as.numeric(strsplit(ED$dividend_C_Date[k],"/")[[1]][2]),
as.numeric(strsplit(ED$dividend_C_Date[k],"/")[[1]][3])
,sep="-")
))
,
"C",
(ED$dividend_C_Earnings+ED$dividend_C_Law)[k]))
}
if (((ED$dividend_S_Earnings+ED$dividend_S_Law)[k]/10>0)) {
getDataS<-rbind(getDataS,cbind(
as.character(as.Date(
paste(
as.numeric(strsplit(ED$dividend_S_Date[k],"/")[[1]][1])+1911,
as.numeric(strsplit(ED$dividend_S_Date[k],"/")[[1]][2]),
as.numeric(strsplit(ED$dividend_S_Date[k],"/")[[1]][3])
,sep="-")
))
,
"S",
(ED$dividend_S_Earnings+ED$dividend_S_Law)[k]))
}
}
assign(paste("ReED_ED_C",substr(BD_dir[i],1,4),sep="."),getDataC)
assign(paste("ReED_ED_S",substr(BD_dir[i],1,4),sep="."),getDataS)
}
y<-get(paste("ReED_ED",substr(BD_dir[i],1,4),sep="."))
yc<-get(paste("ReED_ED_C",substr(BD_dir[i],1,4),sep="."))
ys<-get(paste("ReED_ED_S",substr(BD_dir[i],1,4),sep="."))
EDxtsC<-xts(as.matrix(yc[,-1]),
as.Date(yc[,1]),
#as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
src='myData',updated=Sys.time())
EDxtsS<-xts(as.matrix(ys[,-1]),
as.Date(ys[,1]),
#as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
src='myData',updated=Sys.time())
EDxts<-cbind(EDxtsS,EDxtsC)
for (m in 1:nrow(EDxts)) {
for (n in 1:ncol(EDxts)) {
if (is.na(EDxts[m,n])) {
0->EDxts[m,n]
}
}
}
x<-get(paste("ReED_BD",substr(BD_dir[i],1,4),sep="."))
colnames(x)<-c("Date","vol_S","vol_P","Open","High","Low","Close","P_D2","exc","NP_D2D")
BDxts<-xts(as.matrix(x[,-1]),
as.Date(x[,1]),
#as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
src='myData',updated=Sys.time())
BDxts<-BDxts["2005-01-01/2016-02-29"]
BDxts
ls(pattern = "^ReED_BD")
for(r in nrow(EDxts):1){#除權息
if(r>1){
assign(paste0("ReED_BD",r),(as.numeric(BDxts[paste0(time(EDxts[r-1,]),"/",time(EDxts[r,])-1)]$Close)-as.numeric(EDxts[r,4]))/(1+as.numeric(EDxts[r,2])))
}else if(r==1){
assign(paste0("ReED_BD",r),(as.numeric(BDxts[paste0("2005-01-01","/",time(EDxts[r,])-1)]$Close)-as.numeric(EDxts[r,4]))/(1+as.numeric(EDxts[r,2])))
}
if(r<nrow(EDxts)){
for (s in (r+1):nrow(EDxts)) {
assign(paste0("ReED_BD",r),(get(paste0("ReED_BD",r))-as.numeric(EDxts[s,4]))/(1+as.numeric(EDxts[s,2])))
}
}
}
ls(pattern = "^ReED_BD")
ReED_BD9
ReED_BD1
nrow(EDxts)
for(r in 1:nrow(EDxts)){#除權息 改以 以2005-01-01為基準
if(r>1){
assign(paste0("ReED_BD",r),
(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*1+as.numeric(EDxts[r,2])+as.numeric(EDxts[r,4])
)
}else if(r==nrow(EDxts)){
assign(paste0("ReED_BD",r),(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/","2016-02-29")]$Close)*1+as.numeric(EDxts[r,2])+as.numeric(EDxts[r,4])
)
}
if(r<nrow(EDxts)){
for (s in (r+1):nrow(EDxts)) {
assign(paste0("ReED_BD",r),(
get(paste0("ReED_BD",r))*(1+as.numeric(EDxts[s,2]))+as.numeric(EDxts[s,4])
)
}
}
}
for(r in 1:nrow(EDxts)){#除權息 改以 以2005-01-01為基準
if(r>1){
assign(paste0("ReED_BD",r),
(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*1+as.numeric(EDxts[r,2])+as.numeric(EDxts[r,4])
)
}else if(r==nrow(EDxts)){
assign(paste0("ReED_BD",r),(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/","2016-02-29")]$Close)*1+as.numeric(EDxts[r,2])+as.numeric(EDxts[r,4])
)
}
if(r<nrow(EDxts)){
for (s in (r+1):nrow(EDxts)) {
assign(paste0("ReED_BD",r),(
get(paste0("ReED_BD",r))*(1+as.numeric(EDxts[s,2]))+as.numeric(EDxts[s,4])
))
}
}
}
for(r in 1:nrow(EDxts)){#除權息 改以 以2005-01-01為基準
if(r>1){
assign(paste0("ReED_BD",r),
(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*1+as.numeric(EDxts[r,2])+as.numeric(EDxts[r,4])
)
}else if(r==nrow(EDxts)){
assign(paste0("ReED_BD",r),(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/","2016-02-29")]$Close)*1+as.numeric(EDxts[r,2])+as.numeric(EDxts[r,4])
)
}
# if(r<nrow(EDxts)){
#   for (s in (r+1):nrow(EDxts)) {
#     assign(paste0("ReED_BD",r),(
#       get(paste0("ReED_BD",r))*(1+as.numeric(EDxts[s,2]))+as.numeric(EDxts[s,4])
#     ))
#   }
# }
}
for(r in 1:nrow(EDxts)){#除權息 改以 以2005-01-01為基準
if(r>1){
assign(paste0("ReED_BD",r),
(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*1+as.numeric(EDxts[r,2])+as.numeric(EDxts[r,4])
))
}else if(r==nrow(EDxts)){
assign(paste0("ReED_BD",r),(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/","2016-02-29")]$Close)*1+as.numeric(EDxts[r,2])+as.numeric(EDxts[r,4])
))
}
# if(r<nrow(EDxts)){
#   for (s in (r+1):nrow(EDxts)) {
#     assign(paste0("ReED_BD",r),(
#       get(paste0("ReED_BD",r))*(1+as.numeric(EDxts[s,2]))+as.numeric(EDxts[s,4])
#     ))
#   }
# }
}
for(r in 1:nrow(EDxts)){#除權息 改以 以2005-01-01為基準
if(r>1){
assign(paste0("ReED_BD",r),
(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}else if(r==nrow(EDxts)){
assign(paste0("ReED_BD",r),(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/","2016-02-29")]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}
}
for(r in 1:nrow(EDxts)){#除權息 改以 以2005-01-01為基準
if(r>1){
assign(paste0("ReED_BD",r),
(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}else if(r==nrow(EDxts)){
assign(paste0("ReED_BD",r),(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/","2016-02-29")]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}
if(r==1){
for (s in (r-1):1) {
assign(paste0("ReED_BD",r),(
get(paste0("ReED_BD",r))*(1+as.numeric(EDxts[s,2]))+as.numeric(EDxts[s,4])
))
}
}
}
for(r in 1:nrow(EDxts)){#除權息 改以 以2005-01-01為基準
if(r<nrow(EDxts)){
assign(paste0("ReED_BD",r),
(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}else if(r==nrow(EDxts)){
assign(paste0("ReED_BD",r),(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/","2016-02-29")]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}
if(r==1){
for (s in (r-1):1) {
assign(paste0("ReED_BD",r),(
get(paste0("ReED_BD",r))*(1+as.numeric(EDxts[s,2]))+as.numeric(EDxts[s,4])
))
}
}
}
ls(pattern = "^ReED_BD")
ReED_BD1
ReED_BD1r
r
r=1
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
for(r in 1:nrow(EDxts)){#除權息 改以 以2005-01-01為基準
if(r<nrow(EDxts)){
assign(paste0("ReED_BD",r),
(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}else if(r==nrow(EDxts)){
assign(paste0("ReED_BD",r),(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/","2016-02-29")]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}
if(r==1){
for (s in (r-1):1) {
assign(paste0("ReED_BD",r),(
get(paste0("ReED_BD",r))*(1+as.numeric(EDxts[s,2]))+as.numeric(EDxts[s,4])
))
}
}
}
ls(pattern = "^ReED_BD")
ReED_BD1
ReED_BD2
for(r in 1:nrow(EDxts)){#除權息 改以 以2005-01-01為基準
if(r<nrow(EDxts)){
assign(paste0("ReED_BD",r),
(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/",time(EDxts[r+1,])-1)]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}else if(r==nrow(EDxts)){
assign(paste0("ReED_BD",r),(
as.numeric(BDxts[paste0(time(EDxts[r,]),"/","2016-02-29")]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])
)
)
}
if(r>1){
for (s in (r-1):1) {
assign(paste0("ReED_BD",r),(
get(paste0("ReED_BD",r))*(1+as.numeric(EDxts[s,2]))+as.numeric(EDxts[s,4])
))
}
}
}
ls(pattern = "^ReED_BD")
ReED_BD2
ReED_BD1
ReED_BD11
assign(paste0("ReED_BD",0),(as.numeric(BDxts[paste0("2005-01-01","/",time(EDxts[r+1,])-1)]$Close)*(1+as.numeric(EDxts[r,2]))+as.numeric(EDxts[r,4])))
assign(paste0("ReED_BD",0),as.numeric(BDxts[paste0("2005-01-01","/",time(EDxts[r+1,])-1)]$Close))
assign(paste0("ReED_BD",0),as.numeric(BDxts[paste0("2005-01-01","/",time(EDxts[1,])-1)]$Close))
ls(pattern = "^ReED_BD")
ReED_BD0
ReED_BD1
EDxts
getSymbols("AAPL")
getSymbols("9904.TW")
9904.TW
`9904.TW`
View(`9904.TW`)
EDxts
BDxts
tail(BDxts)
EDxts
EDxtsC
EDxtsS
EDxts
getData
ED
=======
# NULL
#
# [[2]]
# [1] "Open"      "High"      "Low"       "Close"     "Volume"    "Adj.Close"
attr(sample.xts, "dimnames")[[2]][6]<-"Adj"
attr(sample.xts, "dimnames")[[2]][6]
# [1] "Adj"
# tw50_data<-mutate(tw50_data,"Open"=as.numeric(Open),"High"=as.numeric(High),"Low"=as.numeric(Low),"Close"=as.numeric(Close),"Volume"=as.numeric(Volume),"Adj"=as.numeric(Adj.Close))
#
# colnames(tw50_data)
# # [1] "Date"      "Open"      "High"      "Low"       "Close"     "Volume"    "Adj.Close" "Adj"
# rownames(tw50_data)<-tw50_data[[1]]
# # [1] "2007-01-02" "2007-01-03" "2007-01-04" "2007-01-05" "2007-01-06" "2007-01-07" "2007-01-08" "2007-01-09" "2007-01-10" "2007-01-11" "2007-01-12"
#
# # c("date","Open","High","Low","Close","Volume")
# sample.xts<-select(tw50_data,-1,-7)
#
# sample.xts <- as.xts(sample.xts, descr='my new xts object')
# # colnames(sample.xts)
# # [1] "Open"   "High"   "Low"    "Close"  "Volume" "Adj"
# # is.xts(sample.xts)
#})#################################################################################################################################app END
output1<-paste0("TW.",stockNum[i])
assign(output1,sample.xts)
}
#result Example:
# TW.2330
#################################################################################################################
#'Restore_Ex_dividend
#'EDxts,EDxtsC,EDxtsS
#
ED_path<-paste0(Upath,"EXdata/Ex_dividend/getStockNumED2/TW.",substr(Symbols.name,1,4),".csv")
ED<-read.csv(ED_path,stringsAsFactors = FALSE)
EDxts<-xts(as.matrix(ED[,-c(1,2)]),
as.Date(ED[,2]),
#as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
src='myData',updated=Sys.time())
#################################################################################################################
#################################################################################################################
#'Backtesting
#'
#'使用資料
#'tw50ReturnOnInvestment:TW.2330
#'Restore_Ex_dividend:EDxts
#'EDxts2,EDxtsC_p,ED_C_r:需要回原檔案抓 以上不含
#setting zone 2
sample.xts<-TW.2330
#判斷式
AnalyzingFormula<-c("ma_20","ma_60")
#均線資料
ma_20<-runMean(as.numeric(sample.xts[,4]),n=20)
ma_60<-runMean(as.numeric(sample.xts[,4]),n=60)
AnalyzingFormula_A<-if(AnalyzingFormula[1]=="ma_20")ma_20
AnalyzingFormula_B<-if(AnalyzingFormula[2]=="ma_60")ma_60
#符合ma_20>ma_60則1(否:0),延遲一天
position<-Lag(ifelse(AnalyzingFormula_A>AnalyzingFormula_B, 1,-1))
Btxts_position<-xts(as.matrix(position),
as.Date(time(TW.2330)),
#as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
src='myData',updated=Sys.time())
for (p in 1:nrow(EDxts)) {#除權息部位為0
if (time(TW.2330)[1]<time(EDxts[p])) {
Btxts_position[time(EDxts[p])]<-0
}
}
return<-ROC(sample.xts$Close)*Btxts_position#use Close
#去除NA值
for (i in 1:nrow(return)) {
if(is.na(return[i])){
j<-i
}else{
startisNumRow<-i;break
}
}
#期間
return<-return[startisNumRow:nrow(sample.xts)]
return
Btxts_position
ROC(sample.xts$Close)
sample.xts$Close
getSymbols("2317.TW")
chartSeries(`2317.TW`)
#chartSeries(`2317.TW`["2000-01::2012-06"],theme="white")
#均線資料
ma_20<-runMean(`2317.TW`[,4],n=20)
ma_60<-runMean(`2317.TW`[,4],n=60)
#加入均線
addTA(ma_20,on=1,col="blue")
addTA(ma_60,on=1,col="red")
addBBands()
#Bollinger%b = (Close-LowerBound) / (UpperBound-LowerBound)
addBBands(draw="p")
addMACD()
position<-Lag(ifelse(ma_20>ma_60, 1,0))
return<-ROC(Ad(`2317.TW`))*position
return
getSymbols("2317.TW")
chartSeries(`2317.TW`)
#chartSeries(`2317.TW`["2000-01::2012-06"],theme="white")
#均線資料
ma_20<-runMean(`2317.TW`[,4],n=20)
ma_60<-runMean(`2317.TW`[,4],n=60)
#加入均線
addTA(ma_20,on=1,col="blue")
addTA(ma_60,on=1,col="red")
addBBands()
#Bollinger%b = (Close-LowerBound) / (UpperBound-LowerBound)
addBBands(draw="p")
addMACD()
#進行策略回測
#符合ma_20>ma_60則1(否:0),延遲一天
position<-Lag(ifelse(ma_20>ma_60, 1,0))
#(log(今天收盤價/昨天收盤價),即10^"2.2e-02"之指數)*(是否持有:1,0)
return<-ROC(Ad(`2317.TW`))*position
#期間
return<-return['2007-04-10/2013-12-31']
#(這裡運用國中數學:log(a)+log(b)=log(ab)，exp(log(ab))=ab)將持有期間之所有數字相乘
return<-exp(cumsum(return))
return
return
#'tw50ReturnOnInvestment
#'
#'子連結:packages xts
#'
#'繼承自:multiquantmod1
#'
#'改版:2
#'改以使用tw0050.csv檔案
#'增加時間點 default day 距今300天
#'
#'改版:3
#'增加APP get data write
#'改以以日期做為選擇時間點 而非距今幾日
#'轉xts 用xts的方法 更快速簡潔
#'欄位調整 VOL=0刪除
#'建立周報酬報表
#'
#'跳過改版4
#'
#'改版:5
#'新增除權息資料 並於該段期間(除權息交易日 當日)持股為0
#'自動往前抓120天 DEFAULT:300天 實際回傳為200+
#'新增每次報酬率 合併回報持有部位及報酬率
#install.packages("quantmod")
# library(dplyr)
library(quantmod)
#disk location
Upath<-paste0(substr(getwd(),1,1),":/")
# #meyhod:1 read dir
# tw50_path<-paste0(Upath,"data/new/tw50/")
# tw50_dir<-dir(tw50_path)
# # tw50_data_path<-paste0(tw50_path,tw50_dir[1])
# # tw50_data<-read.csv(tw50_data_path)
#meyhod:2 read table file of csv
tw50_path<-paste0(Upath,"EXdata/tw0050.csv")
tw50_dir<-read.csv(tw50_path,stringsAsFactors = FALSE)
tw50_dir<-tw50_dir[[1]]
#setting zone 1
from <- "2010-01-01"
to <- "2016-04-17"
# stockNum<-tw50_dir
stockNum<-2330
from <- as.Date(as.numeric(as.Date(from,origin='1970-01-01'))-120)
for (i in 1:length(stockNum)) {
Symbols.name<-paste0(substr(stockNum[i],1,4),".TW")####################tw50_dir[1]  for loop
#meyhod:3 make function on app
#datasetInput <- reactive({#########################################################################################################app start
# Symbols.name<-paste0(input$ID,".TW")####################app use
verbose <- FALSE###############################################################################################
tmp <- tempfile()
on.exit(unlink(tmp))
beforeDay<-300##########################取距離今天幾天前
default.from <- as.Date(as.numeric(Sys.Date())+25569-beforeDay, origin = "1899-12-30")
default.to <- Sys.Date()
from <- if(is.null(from)) default.from else from
to <- if(is.null(to)) default.to else to
from.y <- as.numeric(strsplit(as.character(as.Date(from,origin='1970-01-01')),'-',)[[1]][1])
from.m <- as.numeric(strsplit(as.character(as.Date(from,origin='1970-01-01')),'-',)[[1]][2])-1
from.d <- as.numeric(strsplit(as.character(as.Date(from,origin='1970-01-01')),'-',)[[1]][3])
to.y <- as.numeric(strsplit(as.character(as.Date(to,origin='1970-01-01')),'-',)[[1]][1])
to.m <- as.numeric(strsplit(as.character(as.Date(to,origin='1970-01-01')),'-',)[[1]][2])-1
to.d <- as.numeric(strsplit(as.character(as.Date(to,origin='1970-01-01')),'-',)[[1]][3])
yahoo.URL <- "http://ichart.finance.yahoo.com/table.csv?"
download.file(paste(yahoo.URL,
"s=",Symbols.name,
"&a=",from.m,
"&b=",sprintf('%.2d',from.d),
"&c=",from.y,
"&d=",to.m,
"&e=",sprintf('%.2d',to.d),
"&f=",to.y,
"&g=d&q=q&y=0",
"&z=",Symbols.name,"&x=.csv",
sep=''),destfile=tmp,quiet=!verbose)
#長度超過200警告 from quantmod
tw50_data <- read.csv(tmp,stringsAsFactors=FALSE)
tw50_data<-filter(tw50_data,  Volume > 0)#去除VOL=0
# tw50_data<-arrange(tw50_data,desc(Date))#一時間排列  進入xts一樣沒用
sample.xts<-xts(as.matrix(tw50_data[,-1]),
as.Date(tw50_data[,1]),
#as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
src='yahoo',updated=Sys.time())
time(sample.xts[1])
# [1] "2015-06-22"
attr(sample.xts, "dimnames") #等同於 dimnames(sample.xts)
# [[1]]
# NULL
#
# [[2]]
# [1] "Open"      "High"      "Low"       "Close"     "Volume"    "Adj.Close"
attr(sample.xts, "dimnames")[[2]][6]<-"Adj"
attr(sample.xts, "dimnames")[[2]][6]
# [1] "Adj"
# tw50_data<-mutate(tw50_data,"Open"=as.numeric(Open),"High"=as.numeric(High),"Low"=as.numeric(Low),"Close"=as.numeric(Close),"Volume"=as.numeric(Volume),"Adj"=as.numeric(Adj.Close))
#
# colnames(tw50_data)
# # [1] "Date"      "Open"      "High"      "Low"       "Close"     "Volume"    "Adj.Close" "Adj"
# rownames(tw50_data)<-tw50_data[[1]]
# # [1] "2007-01-02" "2007-01-03" "2007-01-04" "2007-01-05" "2007-01-06" "2007-01-07" "2007-01-08" "2007-01-09" "2007-01-10" "2007-01-11" "2007-01-12"
#
# # c("date","Open","High","Low","Close","Volume")
# sample.xts<-select(tw50_data,-1,-7)
#
# sample.xts <- as.xts(sample.xts, descr='my new xts object')
# # colnames(sample.xts)
# # [1] "Open"   "High"   "Low"    "Close"  "Volume" "Adj"
# # is.xts(sample.xts)
#})#################################################################################################################################app END
output1<-paste0("TW.",stockNum[i])
assign(output1,sample.xts)
}
#result Example:
# TW.2330
#################################################################################################################
#'Restore_Ex_dividend
#'EDxts,EDxtsC,EDxtsS
#
ED_path<-paste0(Upath,"EXdata/Ex_dividend/getStockNumED2/TW.",substr(Symbols.name,1,4),".csv")
ED<-read.csv(ED_path,stringsAsFactors = FALSE)
EDxts<-xts(as.matrix(ED[,-c(1,2)]),
as.Date(ED[,2]),
#as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
src='myData',updated=Sys.time())
#################################################################################################################
#################################################################################################################
#'Backtesting
#'
#'使用資料
#'tw50ReturnOnInvestment:TW.2330
#'Restore_Ex_dividend:EDxts
#'EDxts2,EDxtsC_p,ED_C_r:需要回原檔案抓 以上不含
#setting zone 2
sample.xts<-TW.2330
#判斷式
AnalyzingFormula<-c("ma_20","ma_60")
#均線資料
ma_20<-runMean(as.numeric(sample.xts[,4]),n=20)
ma_60<-runMean(as.numeric(sample.xts[,4]),n=60)
AnalyzingFormula_A<-if(AnalyzingFormula[1]=="ma_20")ma_20
AnalyzingFormula_B<-if(AnalyzingFormula[2]=="ma_60")ma_60
#符合ma_20>ma_60則1(否:0),延遲一天
position<-Lag(ifelse(AnalyzingFormula_A>AnalyzingFormula_B, 1,-1))
Btxts_position<-xts(as.matrix(position),
as.Date(time(TW.2330)),
#as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
src='myData',updated=Sys.time())
for (p in 1:nrow(EDxts)) {#除權息部位為0
if (time(TW.2330)[1]<time(EDxts[p])) {
Btxts_position[time(EDxts[p])]<-0
}
}
return<-ROC(sample.xts$Close)*Btxts_position#use Close
#去除NA值
for (i in 1:nrow(return)) {
if(is.na(return[i])){
j<-i
}else{
startisNumRow<-i;break
}
}
#期間
return<-return[startisNumRow:nrow(sample.xts)]
return
startDate<-as.POSIXlt(time(sample.xts[startisNumRow]))
endDate<-as.POSIXlt(time(sample.xts[nrow(sample.xts)]))
startYear<-startDate$year+1900
endYear<-endDate$year+1900
startMonth<-startDate$mon+1
endMonth<-endDate$mon+1
startDay<-startDate$mday
endDay<-endDate$mday
return_All<-exp(cumsum(return))
exp(cumsum(return))
ls()
output2
# if(format(as.Date(startDate), "%a")=="週二")
# unlist(unclass(as.POSIXlt(as.Date(16699))))
# unlist(unclass(  as.POSIXlt( as.Date(16699))  ))[[7]][1]
towday1<-8-unlist(unclass(startDate))[[7]][1]
dayNum<-as.numeric(as.Date(startDate))+towday1
towday1_End<-unlist(unclass(as.POSIXlt(as.Date(endDate))))[[7]][1]-1
dayNum_end<-as.numeric(as.Date(endDate))-towday1_End
loopNum<-(dayNum_end-dayNum)/7-1
result_t<-NULL
for (i in 0:loopNum) {
# i=1
#改周報酬
period_Start<-as.Date(dayNum+7*i)#周一
period_End<-as.Date(dayNum+6+7*i)#周日
period<-paste(period_Start,period_End,sep = "/")
#符合時間內
# if( as.numeric(as.Date(startDate))<period_Start & period_End<as.numeric(as.Date(endDate)) ){#############符合時間內##############START
return_period<-return[period]
if(dim(return_period)[1]!=0){
#(這裡運用國中數學:log(a)+log(b)=log(ab)，exp(log(ab))=ab)將持有期間之所有數字相乘
assign("WeekRateOfReturn",exp(cumsum(return_period)))
result_W<-cbind("Date"=paste(substr(time(WeekRateOfReturn[length(WeekRateOfReturn)]),1,10),substr(time(WeekRateOfReturn[1]),1,10),sep = " ~ "),"WeekRoR"=round(WeekRateOfReturn[[length(WeekRateOfReturn)]][1],3))
#"WeekRoR"= 到xts沒用
result_t<-rbind(result_t,result_W)
}
# }##########################################################################################################符合時間內##############END
}
result<-result_t
# result<-as.xts(as.matrix(as.numeric(result_t[,2])),
#        as.Date(result_t[,1]),
#        #as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
#        # src='yahoo',
#        Avg=mean(as.numeric(as.matrix(result_t[,2]))),
#        updated=Sys.time())
# attr(result, "dimnames")[[2]][2]<-"WeekRoR"
output2<-paste0("WeekRateOfReturn.",substr(Symbols.name,1,4))
assign(output2,result)
output2
WeekRateOfReturn.2330
{
# if(format(as.Date(endDate), "%a")=="週二")
# unlist(unclass(as.POSIXlt(as.Date(16699))))
# unlist(unclass(  as.POSIXlt( as.Date(16699))  ))[[7]][1]
year_A_S<-unlist(unclass(startDate))[[6]][1]+1900
mon_A_S<-unlist(unclass(startDate))[[5]][1]+1
mday_A_S<-unlist(unclass(startDate))[[4]][1]
year_A_E<-unlist(unclass(endDate))[[6]][1]+1900
mon_A_E<-unlist(unclass(endDate))[[5]][1]+1
mday_A_E<-unlist(unclass(endDate))[[4]][1]
# dayNum<-as.numeric(as.Date(endDate))+towday1
#
# towday1_End<-unlist(unclass(as.POSIXlt(as.Date(endDate))))[[7]][1]-1
# dayNum_end<-as.numeric(as.Date(endDate))-towday1_End
loopNum<-(year_A_E-if(mon_A_E>mon_A_S){year_A_S}else if(mon_A_E==mon_A_S&mday_A_E>mday_A_S-2){year_A_S}else{year_A_S+1})
result_t<-NULL
for (i in 0:loopNum) {
# i=1
#改"距今一年" 年報酬
# year_A<-unlist(unclass(endDate))[[6]][1]+1900+i
period_Start<-paste(year_A_E-1-i,mon_A_E,mday_A_E+1,sep="-")
period_End<-paste(year_A_E-i,mon_A_E,mday_A_E,sep="-")
period<-paste(as.Date(as.character(period_Start)),as.Date(as.character(period_End)),sep = "/")
#符合時間內
# if( as.numeric(as.Date(startDate))<period_Start & period_End<as.numeric(as.Date(endDate)) ){#############符合時間內##############START
return_period<-return[period]
if(dim(return_period)[1]!=0){
#(這裡運用國中數學:log(a)+log(b)=log(ab)，exp(log(ab))=ab)將持有期間之所有數字相乘
assign("AnnualRateOfReturn",exp(cumsum(return_period)))
result_W<-cbind("Date"=paste(substr(time(AnnualRateOfReturn[length(AnnualRateOfReturn)]),1,10),substr(time(AnnualRateOfReturn[1]),1,10),sep = " ~ "),"WeekRoR"=round(AnnualRateOfReturn[[length(AnnualRateOfReturn)]][1],3))
#"WeekRoR"= 到xts沒用
result_t<-rbind(result_t,result_W)
}
# }##########################################################################################################符合時間內##############END
}
result<-result_t
# result<-as.xts(as.matrix(as.numeric(result_t[,2])),
#                as.Date(result_t[,1]),
#                #as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
#                # src='yahoo',
#                Avg=mean(as.numeric(as.matrix(result_t[,2]))),
#                updated=Sys.time())
# attr(result, "dimnames")[[2]][2]<-"WeekRoR"
output2<-paste0("AnnualRateOfReturn.",substr(Symbols.name,1,4))
assign(output2,result)
#################################################################################################################AnnualRateOfReturn END
}
{
# if(format(as.Date(endDate), "%a")=="週二")
# unlist(unclass(as.POSIXlt(as.Date(16699))))
# unlist(unclass(  as.POSIXlt( as.Date(16699))  ))[[7]][1]
year_A_S<-unlist(unclass(startDate))[[6]][1]+1900
mon_A_S<-unlist(unclass(startDate))[[5]][1]+1
mday_A_S<-unlist(unclass(startDate))[[4]][1]
year_A_E<-unlist(unclass(endDate))[[6]][1]+1900
mon_A_E<-unlist(unclass(endDate))[[5]][1]+1
mday_A_E<-unlist(unclass(endDate))[[4]][1]
# dayNum<-as.numeric(as.Date(endDate))+towday1
#
# towday1_End<-unlist(unclass(as.POSIXlt(as.Date(endDate))))[[7]][1]-1
# dayNum_end<-as.numeric(as.Date(endDate))-towday1_End
loopNum<-(year_A_E-if(mon_A_E>mon_A_S){year_A_S}else if(mon_A_E==mon_A_S&mday_A_E>mday_A_S-2){year_A_S}else{year_A_S+1})
result_t<-NULL
for (i in 0:loopNum) {
# i=1
#改"距今一年" 年報酬
# year_A<-unlist(unclass(endDate))[[6]][1]+1900+i
period_Start<-paste(year_A_E-1-i,mon_A_E,mday_A_E+1,sep="-")
period_End<-paste(year_A_E-i,mon_A_E,mday_A_E,sep="-")
period<-paste(as.Date(as.character(period_Start)),as.Date(as.character(period_End)),sep = "/")
#符合時間內
# if( as.numeric(as.Date(startDate))<period_Start & period_End<as.numeric(as.Date(endDate)) ){#############符合時間內##############START
return_period<-return[period]
if(dim(return_period)[1]!=0){
#(這裡運用國中數學:log(a)+log(b)=log(ab)，exp(log(ab))=ab)將持有期間之所有數字相乘
assign("AnnualRateOfReturn",exp(cumsum(return_period)))
result_W<-cbind("Date"=paste(substr(time(AnnualRateOfReturn[length(AnnualRateOfReturn)]),1,10),substr(time(AnnualRateOfReturn[1]),1,10),sep = " ~ "),"WeekRoR"=round(AnnualRateOfReturn[[length(AnnualRateOfReturn)]][1],3))
#"WeekRoR"= 到xts沒用
result_t<-rbind(result_t,result_W)
}
# }##########################################################################################################符合時間內##############END
}
result<-result_t
# result<-as.xts(as.matrix(as.numeric(result_t[,2])),
#                as.Date(result_t[,1]),
#                #as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
#                # src='yahoo',
#                Avg=mean(as.numeric(as.matrix(result_t[,2]))),
#                updated=Sys.time())
# attr(result, "dimnames")[[2]][2]<-"WeekRoR"
output2<-paste0("AnnualRateOfReturn.",substr(Symbols.name,1,4))
assign(output2,result)
#################################################################################################################AnnualRateOfReturn END
}
output2
AnnualRateOfReturn.2330
{
#去除NA值
for (i in 1:nrow(Btxts_position)) {
if(is.na(Btxts_position[i])){
j<-i
}else{
startisNumRow_position<-i;break
}
}
exchangeTimes<-NULL
exchangeTimes_RNum<-NULL
#exchange times
for (p in 1:nrow(Btxts_position)) {
if(p>startisNumRow_position&p!=nrow(Btxts_position)){
exchangeTimes<-rbind(exchangeTimes,abs(Btxts_position[[p]]-Btxts_position[[p+1]]))
if(abs(Btxts_position[[p]]-Btxts_position[[p+1]])!=0){
exchangeTimes_RNum<-cbind(exchangeTimes_RNum,p)
}
}else{
exchangeTimes<-rbind(exchangeTimes,0)
}
}
sum(exchangeTimes)
exchangeTimes<-cbind(exchangeTimes,cumsum(exchangeTimes))
#output:exchangeTimes_RNum,exchangeTimes
# year_A_S<-unlist(unclass(startDate))[[6]][1]+1900
# mon_A_S<-unlist(unclass(startDate))[[5]][1]+1
# mday_A_S<-unlist(unclass(startDate))[[4]][1]
#
# year_A_E<-unlist(unclass(endDate))[[6]][1]+1900
# mon_A_E<-unlist(unclass(endDate))[[5]][1]+1
# mday_A_E<-unlist(unclass(endDate))[[4]][1]
#
# # dayNum<-as.numeric(as.Date(endDate))+towday1
# #
# # towday1_End<-unlist(unclass(as.POSIXlt(as.Date(endDate))))[[7]][1]-1
# # dayNum_end<-as.numeric(as.Date(endDate))-towday1_End
# loopNum<-(year_A_E-if(mon_A_E>mon_A_S){year_A_S}else if(mon_A_E==mon_A_S&mday_A_E>mday_A_S-2){year_A_S}else{year_A_S+1})
result_t<-NULL
for (i in (length(exchangeTimes_RNum)-1):1) {
# i=1
#改"距今一年" 年報酬
# year_A<-unlist(unclass(endDate))[[6]][1]+1900+i
period_Start<-  time(Btxts_position[exchangeTimes_RNum[i]])
period_End<-  time(Btxts_position[exchangeTimes_RNum[i+1]])
# period<-paste(as.Date(as.character(period_Start)),as.Date(as.character(period_End)),sep = "/")
period<-paste(period_Start,period_End,sep = "/")
#符合時間內
# if( as.numeric(as.Date(startDate))<period_Start & period_End<as.numeric(as.Date(endDate)) ){#############符合時間內##############START
return_period<-return[period]
if(dim(return_period)[1]!=0){
#(這裡運用國中數學:log(a)+log(b)=log(ab)，exp(log(ab))=ab)將持有期間之所有數字相乘
assign("FrequencyOfReturn",exp(cumsum(return_period)))
result_W<-cbind("Date"=paste(substr(time(FrequencyOfReturn[length(FrequencyOfReturn)]),1,10),
substr(time(FrequencyOfReturn[1]),1,10),sep = " ~ "),
"WeekRoR"=round(FrequencyOfReturn[[length(FrequencyOfReturn)]][1],3))
#"WeekRoR"= 到xts沒用
result_t<-rbind(result_t,result_W)
}
# }##########################################################################################################符合時間內##############END
}
result<-result_t
# result<-as.xts(as.matrix(as.numeric(result_t[,2])),
#                as.Date(result_t[,1]),
#                #as.POSIXct(fr[,1], tz=Sys.getenv("TZ")),
#                # src='yahoo',
#                Avg=mean(as.numeric(as.matrix(result_t[,2]))),
#                updated=Sys.time())
# attr(result, "dimnames")[[2]][2]<-"WeekRoR"
output2<-paste0("FrequencyOfReturn.",substr(Symbols.name,1,4))
assign(output2,result)
#################################################################################################################FrequencyOfReturn END
}
output2
FrequencyOfReturn.2330
FrequencyOfR_position_RowNum<-(exchangeTimes_RNum[1:(length(exchangeTimes_RNum)-1)])#刪除最後持股部位 因為為最後持有狀態
A<-as.data.frame(Btxts_position[FrequencyOfR_position_RowNum])
slice(A,c(nrow(A):1))
FrequencyOfR_result<-cbind(result,slice(A,c(nrow(A):1)))
FrequencyOfR_result_2<-Btxts_position[exchangeTimes_RNum[length(exchangeTimes_RNum)]]
FrequencyOfR_result
FrequencyOfR_result_2
>>>>>>> origin/master
